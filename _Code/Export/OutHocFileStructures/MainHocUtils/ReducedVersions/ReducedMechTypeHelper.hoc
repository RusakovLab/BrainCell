
begintemplate ReducedMechTypeHelper

    public getVarNameWithIndex, isWeightNetConVar, createMechStd
    
    external isAstrocyteOrNeuron
    external stringsEqual, codeContractViolation
    
    strdef weightVarName
    
    objref this
    
    
    proc init() {
        // This NetCon var requires some special logic when the release probability mechanics is enabled
        weightVarName = "weight"
    }
    
    // Keep in sync with MechTypeHelper.getVarNameWithIndex
    proc getVarNameWithIndex() { local arraySize, arrayIndex
        strdef varName
        varName = $s1
        arraySize = $2
        arrayIndex = $3
        if (arraySize == 1) {
            $s4 = varName
        } else {
            sprint($s4, "%s[%d]", varName, arrayIndex)
        }
    }
    
    func isWeightNetConVar() {
        strdef varName
        varName = $s1
        return stringsEqual(varName, weightVarName)
    }
    
    objref _fms
    
    obfunc createMechStd() { local enumDmPpFk, mechIdx, varType, mechTypeIdx localobj mechType, fms, nil
        strdef mechName, templName, hocCommand
        enumDmPpFk = $1
        mechIdx = $2
        varType = $3
        if (enumDmPpFk != 2) {
            mechTypeIdx = enumDmPpFk    // 0: "Distributed Membrane Mechanisms", 1: "Point Processes"
            mechType = new MechanismType(mechTypeIdx)
            mechType.select(mechIdx)
            mechType.selected(mechName)
            return new MechanismStandard(mechName, varType)
        } else {
            if (mechIdx == 0) {         // !!!!! keep in sync with utils4FakeMech4GapJuncExtValue.mechIdx
                templName = "FakeMechanismStandardForExtValue"
            } else if (mechIdx == 1) {  // !!!!! keep in sync with utils4FakeMech4SynNetCon.mechIdx
                templName = "FakeMechanismStandardForNetCon"
            } else {
                codeContractViolation()
            }
            sprint(hocCommand, "_fms = new %s()", templName)
            execute(hocCommand, this)
            fms = _fms
            _fms = nil
            return fms
        }
    }
    
endtemplate ReducedMechTypeHelper

objref mth
mth = new ReducedMechTypeHelper()
