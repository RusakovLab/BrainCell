
objref manageAndRunWidget, mechManagerMainWidget, synManagerMainWidget, varsEditorSubWidget
objref mth, mmmowb, mcu, mcu4t, gapJuncGroups[2], synGroup

if (makeSureDeclared("inhomAndStochLibrary") && isBaseOrNanoStart) {
    codeContractViolation()
}

// !!
if (makeSureDeclared("ecsLibrary") && isBaseOrNanoStart) {
    codeContractViolation()
}

if (isAstrocyteOrNeuron) {
    objref enumSynCompIdxs, seh
} else {
    objref enumGapJuncCompIdxs
}

proc loadIfNotDeclared() { local numArg, isSkipCodeContractCheck
    strdef templName, hocFileRelPathName
    
    numArg = numarg()
    if (numArg < 2 || numArg > 3) {
        codeContractViolation()
    }
    
    templName = $s1
    hocFileRelPathName = $s2
    
    if (numArg == 3) {
        isSkipCodeContractCheck = $3
    } else {
        isSkipCodeContractCheck = 0
    }
    
    if (!name_declared(templName)) {
        load_file(hocFileRelPathName)
    } else if (isBaseOrNanoStart && !isSkipCodeContractCheck) {
        codeContractViolation()
    }
}

{ load_file("FakeMechanismType.hoc") }
{ load_file("MechTypeHelper.hoc") }

{ load_file("InhomAndStochLibrary/InhomAndStochLibraryLoads.hoc") }

{ load_file("Widgets/Inhomogeneity/InhomEditorSectionUtils.hoc") }
loadIfNotDeclared("SegmentationHelper", "Widgets/Inhomogeneity/SegmentationHelper.hoc")
{ load_file("Widgets/Inhomogeneity/InhomEditorSubWidget.hoc") }

loadIfNotDeclared("ColourizationHelper", "Widgets/Stochasticity/Exported/ColourizationHelper.hoc")
loadIfNotDeclared("BoundingHelper", "Widgets/Stochasticity/Exported/BoundingHelper.hoc")
{ load_file("Widgets/Stochasticity/StochEditorSubWidget.hoc") }

{ load_file("Widgets/VarsEditorWidget.hoc") }
{ load_file("Widgets/ListsFilterWidget.hoc") }

{ load_file("Widgets/ManageAndRunWidget.hoc") }

{ load_file("ManagersCommonUtils.hoc") }
{ load_file("ManagersCommonUtilsForTaps.hoc") }

{ load_file("TapGroup.hoc") }
